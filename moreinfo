// класс для хранения номера телефона и адресса
public class moreinfo {
	public static void main() {}
}
class work extends pers{  //Класс наследуется от предыдущего и расширяет его
	private String adress; //Новые пременные с адрессом
	private long phone;    //И номером телефона
	public work(String name,int age, String adress, long phone) { //Обявление всех переменных, путём создания конструктора
		super(name,age); //Параметр super указывает на то, какие данные будет брать дочерний класс у основного
		this.adress = adress;
		this.phone = phone;
	}
	public void displayMoreInfo() { //Это для вывода в консоль (Использовал во время отладки)
		System.out.printf("Name: %s Age: %s\nPhone: %s adress: %s",getname(),getage(), phone, adress);
	}
	public String foWrite(int z) { //А этот, с возвращаемыми значениями, специально для записи в файл(Тут принимается параметр z который содержит колличество строк)
/*		String tex = "\n Имя: " +getname() +" Город: " +adress +" Возраст: " +getage()+" Телефон: " +phone;
*		return tex;
*/					//Это больше не актуально, так сказать, версия 0.2
	if (z == 1) { //Проверяется на соответствие единеце, если там всего одна строка, значит файл не дописывался
		z=0;  //z - номер строки
		String tex = z+"." +"Имя: " +getname() +" Город: " +adress +" Возраст: " +getage()+" Телефон: " +phone +"\n "; //Добавил в конце перенос строки, чтоб их было на 1 больше чем по факту
		return tex;
	} else {
		z-=1; //Если строк больше чем 1 (После первого внесения данных,строк будет уже две) то выводится это:
		String tex = z+"." +"Имя: " +getname() +" Город: " +adress +" Возраст: " +getage()+" Телефон: " +phone +"\n ";	//Тут выводится номер строки - 1, т.к. строк на одну больше чем записанно данных	
		return tex;
	}
}
